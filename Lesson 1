1.1 条件与循环语句
----条件语句----
  ifelse 函数
# ifeles(condition#执行判断, statement1#条件为真执行的操作,statment2#条件为假时执行的操作)
d <- 2
ifelse(d > 5, d, d + 5)
if 结构
# if(condition){statement} #小括号定义条件，大括号定义操作 #本例为如果条件为真，则执行statement的语句
x <- 7
if(x < 8){
  x <- x +4
  print(x)
}

x <- 10
if(x >= 8){
  x <- x - 4
  print(x)
}
if-else 结构
# if(condition){statement1#当if为真则执行}else{statement2#当if为假时则执行}
x <- 7
if(x < 8){
  x <- x +4
  print(x)
}else{
  x <- x - 4
  print(x)
}

x <- 10
if(x < 8){
  print("x 小于 8。")
}else{
  print("x 大于等于 8。")
}
if-else if-else 结构 #中间可以加N多个else if
x<-6
if(x < 8){
  print("x 小于 8。")
}else if(x < 10){
  print("x 大于等于 8，但 x 小于 10。")
}else{
  print("x 大于等于 10。")
}
if 嵌套结构
a <- 10
b <- 3
if(a > 5){
  if(b < 5){
    c <- a - b
    print(c)
  }else{
    c <- a + b
    print(c)
  }
}
----循环语句----
  for 循环
# for(name in expr_1){expr_2} #小括号定义变量的取值范围，大括号定义执行的操作
x <- c(3,4,5)
for(i in x){
  print(i^2)
}

total <- 0
for(i in 1:10){
  total <- total + i
  print(total)
}
while 循环
#while(condition){statement}#小括号为判断，凡是符合判断就一直循环下去，大括号为执行的内容
x <- 1
while(x < 5){
  print(x)
  x <- x + 1
}
1.2 自定义函数
my_function <- function(arg1,arg2,...){ 
  statements
  return(object)
} #小括号是参数，大括号是执行语句
求和
sum(3,4)

my_sum <- function(x,y){
  return(x + y)
}
my_sum(3,4)
求平方和
sum_of_squre <- function(x,y){
  z <- x^2 + y^2
  return(z)
}
sum_of_squre(3,4)
求 1 至 n 的平方和
sum_of_squre_n <- function(n){
  s <- 0
  for(i in 1:n){
    s <- s + i^2
  }
  return(s)
}
sum_of_squre_n(5)
